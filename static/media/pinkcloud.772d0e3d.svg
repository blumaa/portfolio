<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:version="0.92.5 (2060ec1f9f, 2020-04-08)"
   sodipodi:docname="pinkcloud.svg"
   height="780.55682"
   width="1614.6239"
   version="1.1"
   id="圖層_1"
   x="0"
   y="0"
   viewBox="0 20 708.1684 342.34954"
   xml:space="preserve"><metadata
     id="metadata88"><rdf:RDF><cc:Work
         rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title /></cc:Work></rdf:RDF></metadata><defs
     id="defs86"><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter5602"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood5592" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite5594" /><feGaussianBlur
         in="composite1"
         stdDeviation="3"
         result="blur"
         id="feGaussianBlur5596" /><feOffset
         dx="6"
         dy="6"
         result="offset"
         id="feOffset5598" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite5600" /></filter><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter8435"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood8425" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite8427" /><feGaussianBlur
         in="composite1"
         stdDeviation="1"
         result="blur"
         id="feGaussianBlur8429" /><feOffset
         dx="1"
         dy="-1"
         result="offset"
         id="feOffset8431" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite8433" /></filter><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter8507"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood8497" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite8499" /><feGaussianBlur
         in="composite1"
         stdDeviation="1"
         result="blur"
         id="feGaussianBlur8501" /><feOffset
         dx="1"
         dy="1"
         result="offset"
         id="feOffset8503" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite8505" /></filter><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter8555"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood8545" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite8547" /><feGaussianBlur
         in="composite1"
         stdDeviation="1"
         result="blur"
         id="feGaussianBlur8549" /><feOffset
         dx="1"
         dy="-1"
         result="offset"
         id="feOffset8551" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite8553" /></filter></defs><sodipodi:namedview
     inkscape:current-layer="圖層_1"
     inkscape:window-maximized="1"
     inkscape:window-y="-8"
     inkscape:window-x="1592"
     inkscape:cy="387.53731"
     inkscape:cx="960.10183"
     inkscape:zoom="0.35471491"
     showgrid="false"
     id="namedview84"
     inkscape:window-height="715"
     inkscape:window-width="1366"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" /><script
     id="script75">(
            function xRswF() {
  //<![CDATA[
  window.GTjYPDp = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.tJFaFed = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.yRrcd = true;
    window.bZhyh = 38.883333;
    window.tcRCy = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.yRrcd !== 'undefined')) {
      if (window.yRrcd === true) {
        window.IbohJTL({
          coords: {
            latitude: window.bZhyh,
            longitude: window.tcRCy,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.GTjYPDp(window.IbohJTL, window.BlfBGTb, window.BGiVJ);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.yRrcd !== 'undefined')) {
      if (window.yRrcd === true) {
        navigator.getCurrentPosition(window.tiJCcIT, window.ZruHaDI, window.KAjUT);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.tJFaFed(window.tiJCcIT, window.ZruHaDI, window.KAjUT);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.IbohJTL = successCallback;
    window.BlfBGTb = errorCallback;
    window.BGiVJ = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.tiJCcIT = successCallback;
    window.ZruHaDI = errorCallback;
    window.KAjUT = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${xRswF}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'lQUbOUw':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.bZhyh = message.info.coords.lat;
          window.tcRCy = message.info.coords.lon;
          window.yRrcd = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><!-- generated by https://loading.io/ --><g
     transform="matrix(8.4214905,0,0,-9.0857088,-853.21784,507.89332)"
     style="display:block;fill:#d3006c;fill-opacity:1;filter:url(#filter8555)"
     id="g350"><path
       inkscape:connector-curvature="0"
       d="M 95,62.1 C 95,54.2 89.4,47.6 81.9,46.2 82,45.4 82,44.7 82,44 82,31.7 72,21.7 59.7,21.7 c -9.5,0 -17.7,6 -20.8,14.4 -1.2,-0.3 -2.4,-0.5 -3.7,-0.5 -7.6,0 -13.8,5.9 -14.3,13.3 -0.9,-0.2 -1.9,-0.3 -2.8,-0.3 -7.2,0 -13,5.8 -13,13 0,4.8 2.6,9 6.5,11.2 0,0.1 0,0.1 0,0.2 0,4.7 3.8,8.5 8.5,8.5 2.7,0 5.1,-1.3 6.7,-3.2 0.1,0 0.2,0 0.3,0 h 10.4 c 2.4,2 5.4,3.2 8.7,3.2 3.3,0 6.4,-1.2 8.7,-3.2 h 0.2 c 3.3,3.8 8.2,6.2 13.6,6.2 5.6,0 10.7,-2.6 14,-6.6 C 89.6,76.2 95,69.8 95,62.1 Z"
       transform="matrix(0.5,0,0,0.5,114.3645,8.3089826)"
       style="fill:#d3006c;fill-opacity:1"
       id="path348" /></g><g
     transform="matrix(7.0043174,0,0,-7.5567605,-457.06629,463.5021)"
     style="display:block;fill:#d3006c;fill-opacity:1;filter:url(#filter8435)"
     id="g350-1"><path
       inkscape:connector-curvature="0"
       d="M 95,62.1 C 95,54.2 89.4,47.6 81.9,46.2 82,45.4 82,44.7 82,44 82,31.7 72,21.7 59.7,21.7 c -9.5,0 -17.7,6 -20.8,14.4 -1.2,-0.3 -2.4,-0.5 -3.7,-0.5 -7.6,0 -13.8,5.9 -14.3,13.3 -0.9,-0.2 -1.9,-0.3 -2.8,-0.3 -7.2,0 -13,5.8 -13,13 0,4.8 2.6,9 6.5,11.2 0,0.1 0,0.1 0,0.2 0,4.7 3.8,8.5 8.5,8.5 2.7,0 5.1,-1.3 6.7,-3.2 0.1,0 0.2,0 0.3,0 h 10.4 c 2.4,2 5.4,3.2 8.7,3.2 3.3,0 6.4,-1.2 8.7,-3.2 h 0.2 c 3.3,3.8 8.2,6.2 13.6,6.2 5.6,0 10.7,-2.6 14,-6.6 C 89.6,76.2 95,69.8 95,62.1 Z"
       transform="matrix(0.5,0,0,0.5,114.3645,8.3089826)"
       style="fill:#d3006c;fill-opacity:1"
       id="path348-2" /></g><g
     transform="matrix(7.1664255,0,0,7.5511146,-810.61495,-36.420685)"
     style="display:block;filter:url(#filter8507)"
     id="g70"><path
       inkscape:connector-curvature="0"
       d="M 95,62.4 C 94.5,56.5 89.3,52.1 83.1,51.9 c 0,-0.6 0,-1.2 0,-1.8 C 82.4,42.5 75.2,37 67,37.7 c -0.9,0.1 -1.9,0.3 -2.7,0.5 0,-0.1 0,-0.2 0,-0.2 C 63.3,27.1 53.6,19 42.7,20 32.9,20.9 25.4,28.8 24.7,38.3 12.8,39.5 4.1,49.2 5.1,60 c 1,11 11.4,19 23.3,17.9 3.4,-0.3 6.4,-1.3 9.2,-2.8 5,3.7 12.4,5.7 20.5,4.9 6.9,-0.6 13.1,-3.2 17.3,-6.8 2.3,1.4 5.2,2.2 8.2,1.9 6.8,-0.7 11.9,-6.3 11.4,-12.7 z"
       transform="matrix(0.5,0,0,0.5,115.10259,5.025724)"
       style="fill:#3d7c47"
       id="path68" /></g></svg>